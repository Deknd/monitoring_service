<databaseChangeLog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <changeSet id="001__create_token_block_sequence" author="den">
        <createSequence sequenceName="id_token_block_sequence" startValue="1" incrementBy="1"
                        schemaName="${defaultSchema}"/>
        <comment>Последовательность для таблицы токенов</comment>
    </changeSet>
    <changeSet id="002__create_table_token_block" author="den">
        <createTable tableName="token_block" schemaName="${defaultSchema}">
            <column name="token_block_id" type="BIGINT" defaultValueSequenceNext="id_token_block_sequence">
                <constraints primaryKey="true" nullable="false" primaryKeyName="token_block_pkey" unique="true"/>
            </column>
            <column name="token_id" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="expiration_time" type="TIMESTAMP WITH TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <comment>Таблица для хранения заблокированных токенов</comment>
    </changeSet>
    <changeSet id="003__create_table_token_block" author="den">
        <createProcedure schemaName="${defaultSchema}">
        <![CDATA[
            CREATE
            OR REPLACE FUNCTION delete_expired_tokens()
            RETURNS trigger AS $$
            BEGIN
            DELETE
            FROM token_block
            WHERE expiration_time < now();
            RETURN NULL;
            END;
            $$
            LANGUAGE plpgsql;
            ]]>
    </createProcedure>
        <sql>
            CREATE TRIGGER delete_expired_tokens_trigger
                AFTER INSERT OR
            UPDATE ON ${defaultSchema}.token_block
                FOR EACH STATEMENT
                EXECUTE PROCEDURE delete_expired_tokens();
        </sql>
    </changeSet>


</databaseChangeLog>